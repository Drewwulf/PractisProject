// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by Reqnroll (https://www.reqnroll.net/).
//      Reqnroll Version:2.0.0.0
//      Reqnroll Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
using Reqnroll;
namespace PractiseProject.Features
{
    
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Reqnroll", "2.0.0.0")]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ProductionCheck")]
    [NUnit.Framework.FixtureLifeCycleAttribute(NUnit.Framework.LifeCycle.InstancePerTestCase)]
    public partial class ProductionCheckFeature
    {
        
        private global::Reqnroll.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
        private static global::Reqnroll.FeatureInfo featureInfo = new global::Reqnroll.FeatureInfo(new global::System.Globalization.CultureInfo("en-US"), "Features", "ProductionCheck", "A short summary of the feature", global::Reqnroll.ProgrammingLanguage.CSharp, featureTags);
        
#line 1 "ProductionCheck.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public static async global::System.Threading.Tasks.Task FeatureSetupAsync()
        {
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public static async global::System.Threading.Tasks.Task FeatureTearDownAsync()
        {
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public async global::System.Threading.Tasks.Task TestInitializeAsync()
        {
            testRunner = global::Reqnroll.TestRunnerManager.GetTestRunnerForAssembly(featureHint: featureInfo);
            try
            {
                if (((testRunner.FeatureContext != null) 
                            && (testRunner.FeatureContext.FeatureInfo.Equals(featureInfo) == false)))
                {
                    await testRunner.OnFeatureEndAsync();
                }
            }
            finally
            {
                if (((testRunner.FeatureContext != null) 
                            && testRunner.FeatureContext.BeforeFeatureHookFailed))
                {
                    throw new global::Reqnroll.ReqnrollException("Scenario skipped because of previous before feature hook error");
                }
                if ((testRunner.FeatureContext == null))
                {
                    await testRunner.OnFeatureStartAsync(featureInfo);
                }
            }
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public async global::System.Threading.Tasks.Task TestTearDownAsync()
        {
            if ((testRunner == null))
            {
                return;
            }
            try
            {
                await testRunner.OnScenarioEndAsync();
            }
            finally
            {
                global::Reqnroll.TestRunnerManager.ReleaseTestRunner(testRunner);
                testRunner = null;
            }
        }
        
        public void ScenarioInitialize(global::Reqnroll.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public async global::System.Threading.Tasks.Task ScenarioStartAsync()
        {
            await testRunner.OnScenarioStartAsync();
        }
        
        public async global::System.Threading.Tasks.Task ScenarioCleanupAsync()
        {
            await testRunner.CollectScenarioErrorsAsync();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CheckEveryProductionCatalog - Chrome")]
        [NUnit.Framework.CategoryAttribute("tag1")]
        public async global::System.Threading.Tasks.Task CheckEveryProductionCatalog_Chrome()
        {
            string[] tagsOfScenario = new string[] {
                    "tag1"};
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("CheckEveryProductionCatalog - Chrome", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 7
 await testRunner.GivenAsync("Choose one of Production in section", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
                global::Reqnroll.Table table12 = new global::Reqnroll.Table(new string[] {
                            "text",
                            "photoLink"});
                table12.AddRow(new string[] {
                            "Жалюзі класичні",
                            "https://dimdvirdevelop.netlify.app/img/portfolio/pf1.jpg"});
                table12.AddRow(new string[] {
                            "Жалюзі STANDART",
                            "https://tile.ua/wp-content/uploads/2023/02/x530yf530.jpg.pagespeed.ic.hvnFsQi7o_." +
                                "webp"});
                table12.AddRow(new string[] {
                            "Жалюзі РОМБ",
                            "https://tile.ua/wp-content/uploads/2021/07/xmetalevyj-sajdynh-1.jpg.pagespeed.ic." +
                                "iCilFAWKtl.webp"});
                table12.AddRow(new string[] {
                            "Жалюзі ЛЕГО",
                            "https://tile.ua/wp-content/uploads/2021/07/xPravylna-vodostichka.jpg.pagespeed.ic" +
                                ".C3TstMbhZO.webp"});
                table12.AddRow(new string[] {
                            "РАНЧО РОМБ",
                            "https://tile.ua/wp-content/uploads/2023/10/xkomplektuiuch.jpg.pagespeed.ic.AIfVle" +
                                "-OQm.webp"});
                table12.AddRow(new string[] {
                            "РАНЧО PIPE L",
                            ""});
                table12.AddRow(new string[] {
                            "РАНЧО PIPE XL",
                            ""});
                table12.AddRow(new string[] {
                            "РАНЧО ПРЯМЕ",
                            "/img/category02/Product8Photo1.png"});
                table12.AddRow(new string[] {
                            "РАНЧО ПРЯМЕ STRONG",
                            "/img/category02/Product9Photo1.png"});
                table12.AddRow(new string[] {
                            "РАНЧО ПІВКРУГЛЕ",
                            "/img/category02/Product10Photo1.png"});
                table12.AddRow(new string[] {
                            "РАНЧО ФІГУРНЕ",
                            "/img/category02/Product11Photo1.png"});
                table12.AddRow(new string[] {
                            "РАНЧО ФІГУРНЕ 2-ст",
                            "/img/category02/Product12Photo1.png"});
                table12.AddRow(new string[] {
                            "РАНЧО РІЗНОШИРИННЕ ПІВКРУГЛЕ",
                            "/img/category02/Product13Photo1.png"});
                table12.AddRow(new string[] {
                            "РАНЧО КОСЕ З ПРОМІЖКОМ",
                            "/img/category02/Product14Photo1.png"});
                table12.AddRow(new string[] {
                            "РАНЧО КОСЕ БЕЗ ПРОМІЖКУ",
                            "/img/category02/Product15Photo1.png"});
                table12.AddRow(new string[] {
                            "ТВІНГО КЛАСИЧНЕ",
                            "/img/category02/Product16Photo1.png"});
                table12.AddRow(new string[] {
                            "ТВІНГО ПРЯМЕ",
                            "/img/category02/Product17Photo1.png"});
                table12.AddRow(new string[] {
                            "ТВІНГО DUOS",
                            "/img/category02/Product18Photo1.png"});
                table12.AddRow(new string[] {
                            "ГОРИЗОНТ 170 мм",
                            "/img/category02/Product19Photo1.png"});
#line 8
 await testRunner.WhenAsync("check CategoryProductionSection", ((string)(null)), table12, "When ");
#line hidden
#line 32
 await testRunner.ThenAsync("[outcome]", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
    }
}
#pragma warning restore
#endregion
