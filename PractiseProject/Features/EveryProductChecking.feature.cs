// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by Reqnroll (https://www.reqnroll.net/).
//      Reqnroll Version:2.0.0.0
//      Reqnroll Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
using Reqnroll;
namespace PractiseProject.Features
{
    
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Reqnroll", "2.0.0.0")]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("EveryProductChecking")]
    [NUnit.Framework.FixtureLifeCycleAttribute(NUnit.Framework.LifeCycle.InstancePerTestCase)]
    public partial class EveryProductCheckingFeature
    {
        
        private global::Reqnroll.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
        private static global::Reqnroll.FeatureInfo featureInfo = new global::Reqnroll.FeatureInfo(new global::System.Globalization.CultureInfo("en-US"), "Features", "EveryProductChecking", "A short summary of the feature", global::Reqnroll.ProgrammingLanguage.CSharp, featureTags);
        
#line 1 "EveryProductChecking.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public static async global::System.Threading.Tasks.Task FeatureSetupAsync()
        {
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public static async global::System.Threading.Tasks.Task FeatureTearDownAsync()
        {
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public async global::System.Threading.Tasks.Task TestInitializeAsync()
        {
            testRunner = global::Reqnroll.TestRunnerManager.GetTestRunnerForAssembly(featureHint: featureInfo);
            try
            {
                if (((testRunner.FeatureContext != null) 
                            && (testRunner.FeatureContext.FeatureInfo.Equals(featureInfo) == false)))
                {
                    await testRunner.OnFeatureEndAsync();
                }
            }
            finally
            {
                if (((testRunner.FeatureContext != null) 
                            && testRunner.FeatureContext.BeforeFeatureHookFailed))
                {
                    throw new global::Reqnroll.ReqnrollException("Scenario skipped because of previous before feature hook error");
                }
                if ((testRunner.FeatureContext == null))
                {
                    await testRunner.OnFeatureStartAsync(featureInfo);
                }
            }
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public async global::System.Threading.Tasks.Task TestTearDownAsync()
        {
            if ((testRunner == null))
            {
                return;
            }
            try
            {
                await testRunner.OnScenarioEndAsync();
            }
            finally
            {
                global::Reqnroll.TestRunnerManager.ReleaseTestRunner(testRunner);
                testRunner = null;
            }
        }
        
        public void ScenarioInitialize(global::Reqnroll.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public async global::System.Threading.Tasks.Task ScenarioStartAsync()
        {
            await testRunner.OnScenarioStartAsync();
        }
        
        public async global::System.Threading.Tasks.Task ScenarioCleanupAsync()
        {
            await testRunner.CollectScenarioErrorsAsync();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CheckProduct1 - Chrome")]
        [NUnit.Framework.CategoryAttribute("tag1")]
        public async global::System.Threading.Tasks.Task CheckProduct1_Chrome()
        {
            string[] tagsOfScenario = new string[] {
                    "tag1"};
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("CheckProduct1 - Chrome", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 7
 await testRunner.GivenAsync("Choose one of Production1 in section", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 8
 await testRunner.WhenAsync("select Product1", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table1 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table1.AddRow(new string[] {
                            "item_name",
                            "ЖАЛЮЗІ КЛАСИЧНІ"});
                table1.AddRow(new string[] {
                            "metal_thickness",
                            "від 0,4 мм"});
                table1.AddRow(new string[] {
                            "section_width",
                            "до 2500 мм"});
                table1.AddRow(new string[] {
                            "lamela_number",
                            "1 шт"});
                table1.AddRow(new string[] {
                            "section_weight",
                            "9 кг"});
                table1.AddRow(new string[] {
                            "t_profile",
                            "Ні"});
                table1.AddRow(new string[] {
                            "lamela_height",
                            "120 мм"});
                table1.AddRow(new string[] {
                            "section_thickness",
                            "60 мм"});
                table1.AddRow(new string[] {
                            "type_section",
                            "Безкаркасна"});
                table1.AddRow(new string[] {
                            "type_bracing",
                            "Заклепки"});
                table1.AddRow(new string[] {
                            "p_plank",
                            "Так"});
                table1.AddRow(new string[] {
                            "kind_section",
                            "Не проглядається"});
#line 9
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table1, "And ");
#line hidden
                global::Reqnroll.Table table2 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table2.AddRow(new string[] {
                            "img_photo1",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product1Photo1.png"});
                table2.AddRow(new string[] {
                            "img_photo2",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product1Photo2.png"});
                table2.AddRow(new string[] {
                            "img_photo3",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product1Photo3.png"});
#line 23
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table2, "And ");
#line hidden
#line 28
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 30
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 31
 await testRunner.WhenAsync("select Product2", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table3 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table3.AddRow(new string[] {
                            "item_name",
                            "ЖАЛЮЗІ STANDART"});
                table3.AddRow(new string[] {
                            "metal_thickness",
                            "від 0,4 мм"});
                table3.AddRow(new string[] {
                            "section_width",
                            "до 2500 мм"});
                table3.AddRow(new string[] {
                            "lamela_number",
                            "10 шт"});
                table3.AddRow(new string[] {
                            "section_weight",
                            "9 кг"});
                table3.AddRow(new string[] {
                            "t_profile",
                            "Ні"});
                table3.AddRow(new string[] {
                            "lamela_height",
                            "120 мм"});
                table3.AddRow(new string[] {
                            "section_thickness",
                            "60 мм"});
                table3.AddRow(new string[] {
                            "type_section",
                            "Безкаркасна"});
                table3.AddRow(new string[] {
                            "type_bracing",
                            "Заклепки"});
                table3.AddRow(new string[] {
                            "p_plank",
                            "Так"});
                table3.AddRow(new string[] {
                            "kind_section",
                            "Не проглядається"});
#line 32
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table3, "And ");
#line hidden
                global::Reqnroll.Table table4 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table4.AddRow(new string[] {
                            "img_photo1",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product2Photo1.png"});
                table4.AddRow(new string[] {
                            "img_photo2",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product2Photo2.png"});
                table4.AddRow(new string[] {
                            "img_photo3",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product2Photo3.png"});
#line 46
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table4, "And ");
#line hidden
#line 51
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 53
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 54
 await testRunner.WhenAsync("select Product3", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table5 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table5.AddRow(new string[] {
                            "item_name",
                            "ЖАЛЮЗІ РОМБ"});
                table5.AddRow(new string[] {
                            "metal_thickness",
                            "від 0,4 мм"});
                table5.AddRow(new string[] {
                            "section_width",
                            "до 3000 мм"});
                table5.AddRow(new string[] {
                            "lamela_number",
                            "12 шт"});
                table5.AddRow(new string[] {
                            "section_weight",
                            "11 кг"});
                table5.AddRow(new string[] {
                            "t_profile",
                            "Ні"});
                table5.AddRow(new string[] {
                            "lamela_height",
                            "95 мм"});
                table5.AddRow(new string[] {
                            "section_thickness",
                            "60 мм"});
                table5.AddRow(new string[] {
                            "type_section",
                            "Безкаркасна"});
                table5.AddRow(new string[] {
                            "type_bracing",
                            "Заклепки"});
                table5.AddRow(new string[] {
                            "p_plank",
                            "Так"});
                table5.AddRow(new string[] {
                            "kind_section",
                            "Не проглядається"});
#line 55
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table5, "And ");
#line hidden
                global::Reqnroll.Table table6 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table6.AddRow(new string[] {
                            "img_photo1",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product3Photo1.png"});
                table6.AddRow(new string[] {
                            "img_photo2",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product3Photo2.png"});
                table6.AddRow(new string[] {
                            "img_photo3",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product3Photo3.png"});
#line 69
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table6, "And ");
#line hidden
#line 74
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 76
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 77
 await testRunner.WhenAsync("select Product4", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table7 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table7.AddRow(new string[] {
                            "item_name",
                            "ЖАЛЮЗІ ЛЕГО"});
                table7.AddRow(new string[] {
                            "metal_thickness",
                            "від 0,4 мм"});
                table7.AddRow(new string[] {
                            "section_width",
                            "до 3000 мм"});
                table7.AddRow(new string[] {
                            "lamela_number",
                            "10 шт"});
                table7.AddRow(new string[] {
                            "section_weight",
                            "11 кг"});
                table7.AddRow(new string[] {
                            "t_profile",
                            "Ні"});
                table7.AddRow(new string[] {
                            "lamela_height",
                            "120 мм"});
                table7.AddRow(new string[] {
                            "section_thickness",
                            "60 мм"});
                table7.AddRow(new string[] {
                            "type_section",
                            "Безкаркасна"});
                table7.AddRow(new string[] {
                            "type_bracing",
                            "Заклепки"});
                table7.AddRow(new string[] {
                            "p_plank",
                            "Так"});
                table7.AddRow(new string[] {
                            "kind_section",
                            "Не проглядається"});
#line 78
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table7, "And ");
#line hidden
                global::Reqnroll.Table table8 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table8.AddRow(new string[] {
                            "img_photo1",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product4Photo1.png"});
                table8.AddRow(new string[] {
                            "img_photo2",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product4Photo2.png"});
                table8.AddRow(new string[] {
                            "img_photo3",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product4Photo3.png"});
#line 92
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table8, "And ");
#line hidden
#line 97
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 99
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 100
 await testRunner.WhenAsync("select Product5", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table9 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table9.AddRow(new string[] {
                            "item_name",
                            "РАНЧО РОМБ"});
                table9.AddRow(new string[] {
                            "metal_thickness",
                            "від 0,4 мм"});
                table9.AddRow(new string[] {
                            "section_width",
                            "до 3000 мм"});
                table9.AddRow(new string[] {
                            "lamela_number",
                            "11 шт"});
                table9.AddRow(new string[] {
                            "section_weight",
                            "10 кг"});
                table9.AddRow(new string[] {
                            "t_profile",
                            "Ні"});
                table9.AddRow(new string[] {
                            "lamela_height",
                            "95 мм"});
                table9.AddRow(new string[] {
                            "section_thickness",
                            "25 мм"});
                table9.AddRow(new string[] {
                            "type_section",
                            "Безкаркасна"});
                table9.AddRow(new string[] {
                            "type_bracing",
                            "Заклепки"});
                table9.AddRow(new string[] {
                            "p_plank",
                            "Так"});
                table9.AddRow(new string[] {
                            "kind_section",
                            "Не проглядається"});
#line 101
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table9, "And ");
#line hidden
                global::Reqnroll.Table table10 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table10.AddRow(new string[] {
                            "img_photo1",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product5Photo1.png"});
                table10.AddRow(new string[] {
                            "img_photo2",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product5Photo2.png"});
                table10.AddRow(new string[] {
                            "img_photo3",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product5Photo3.png"});
#line 115
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table10, "And ");
#line hidden
#line 120
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 122
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 123
 await testRunner.WhenAsync("select Product6", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table11 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table11.AddRow(new string[] {
                            "item_name",
                            "РАНЧО PIPE L"});
                table11.AddRow(new string[] {
                            "metal_thickness",
                            "від 0,4 мм"});
                table11.AddRow(new string[] {
                            "section_width",
                            "до 3000 мм"});
                table11.AddRow(new string[] {
                            "lamela_number",
                            "6 шт"});
                table11.AddRow(new string[] {
                            "section_weight",
                            "9 кг"});
                table11.AddRow(new string[] {
                            "t_profile",
                            "Ні"});
                table11.AddRow(new string[] {
                            "lamela_height",
                            "190 мм"});
                table11.AddRow(new string[] {
                            "section_thickness",
                            "30 мм"});
                table11.AddRow(new string[] {
                            "type_section",
                            "Безкаркасна"});
                table11.AddRow(new string[] {
                            "type_bracing",
                            "Заклепки"});
                table11.AddRow(new string[] {
                            "p_plank",
                            "Так"});
                table11.AddRow(new string[] {
                            "kind_section",
                            "Не проглядається"});
#line 124
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table11, "And ");
#line hidden
                global::Reqnroll.Table table12 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table12.AddRow(new string[] {
                            "img_photo1",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product6Photo1.png"});
                table12.AddRow(new string[] {
                            "img_photo2",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product6Photo2.png"});
                table12.AddRow(new string[] {
                            "img_photo3",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product6Photo3.png"});
#line 138
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table12, "And ");
#line hidden
#line 143
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 145
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 146
 await testRunner.WhenAsync("select Product7", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table13 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table13.AddRow(new string[] {
                            "item_name",
                            "РАНЧО PIPE XL"});
                table13.AddRow(new string[] {
                            "metal_thickness",
                            "від 0,4 мм"});
                table13.AddRow(new string[] {
                            "section_width",
                            "до 3000 мм"});
                table13.AddRow(new string[] {
                            "lamela_number",
                            "5 шт"});
                table13.AddRow(new string[] {
                            "section_weight",
                            "11 кг"});
                table13.AddRow(new string[] {
                            "t_profile",
                            "Ні"});
                table13.AddRow(new string[] {
                            "lamela_height",
                            "275 мм"});
                table13.AddRow(new string[] {
                            "section_thickness",
                            "60 мм"});
                table13.AddRow(new string[] {
                            "type_section",
                            "Безкаркасна"});
                table13.AddRow(new string[] {
                            "type_bracing",
                            "Заклепки"});
                table13.AddRow(new string[] {
                            "p_plank",
                            "Так"});
                table13.AddRow(new string[] {
                            "kind_section",
                            "Не проглядається"});
#line 147
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table13, "And ");
#line hidden
                global::Reqnroll.Table table14 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table14.AddRow(new string[] {
                            "img_photo1",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product7Photo1.png"});
                table14.AddRow(new string[] {
                            "img_photo2",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product7Photo2.png"});
                table14.AddRow(new string[] {
                            "img_photo3",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product7Photo3.png"});
#line 161
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table14, "And ");
#line hidden
#line 166
await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 168
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 169
 await testRunner.WhenAsync("select Product8", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table15 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table15.AddRow(new string[] {
                            "item_name",
                            "РАНЧО ПРЯМЕ"});
                table15.AddRow(new string[] {
                            "metal_thickness",
                            "від 0,4 мм"});
                table15.AddRow(new string[] {
                            "section_width",
                            "до 3000 мм"});
                table15.AddRow(new string[] {
                            "lamela_number",
                            "6 шт"});
                table15.AddRow(new string[] {
                            "section_weight",
                            "9 кг"});
                table15.AddRow(new string[] {
                            "t_profile",
                            "Так"});
                table15.AddRow(new string[] {
                            "lamela_height",
                            "150 мм"});
                table15.AddRow(new string[] {
                            "section_thickness",
                            "25 мм"});
                table15.AddRow(new string[] {
                            "type_section",
                            "Безкаркасна"});
                table15.AddRow(new string[] {
                            "type_bracing",
                            "Заклепки"});
                table15.AddRow(new string[] {
                            "p_plank",
                            "Так"});
                table15.AddRow(new string[] {
                            "kind_section",
                            "Проглядається"});
#line 170
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table15, "And ");
#line hidden
                global::Reqnroll.Table table16 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table16.AddRow(new string[] {
                            "img_photo1",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product8Photo1.png"});
                table16.AddRow(new string[] {
                            "img_photo2",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product8Photo2.png"});
                table16.AddRow(new string[] {
                            "img_photo3",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product8Photo3.png"});
#line 184
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table16, "And ");
#line hidden
#line 189
await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 190
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 191
 await testRunner.WhenAsync("select Product9", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table17 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table17.AddRow(new string[] {
                            "item_name",
                            "РАНЧО ПРЯМЕ STRONG"});
                table17.AddRow(new string[] {
                            "metal_thickness",
                            "від 0,4 мм"});
                table17.AddRow(new string[] {
                            "section_width",
                            "до 3000 мм"});
                table17.AddRow(new string[] {
                            "lamela_number",
                            "10 шт"});
                table17.AddRow(new string[] {
                            "section_weight",
                            "9 кг"});
                table17.AddRow(new string[] {
                            "t_profile",
                            "Так"});
                table17.AddRow(new string[] {
                            "lamela_height",
                            "80 мм"});
                table17.AddRow(new string[] {
                            "section_thickness",
                            "25 мм"});
                table17.AddRow(new string[] {
                            "type_section",
                            "Безкаркасна"});
                table17.AddRow(new string[] {
                            "type_bracing",
                            "Заклепки"});
                table17.AddRow(new string[] {
                            "p_plank",
                            "Так"});
                table17.AddRow(new string[] {
                            "kind_section",
                            "Проглядається"});
#line 192
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table17, "And ");
#line hidden
                global::Reqnroll.Table table18 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table18.AddRow(new string[] {
                            "img_photo1",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product9Photo1.png"});
                table18.AddRow(new string[] {
                            "img_photo2",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product9Photo2.png"});
                table18.AddRow(new string[] {
                            "img_photo3",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product9Photo3.png"});
#line 206
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table18, "And ");
#line hidden
#line 211
await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 212
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 213
 await testRunner.WhenAsync("select Product10", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table19 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table19.AddRow(new string[] {
                            "item_name",
                            "РАНЧО ПІВКРУГЛЕ"});
                table19.AddRow(new string[] {
                            "metal_thickness",
                            "від 0,4 мм"});
                table19.AddRow(new string[] {
                            "section_width",
                            "до 3000 мм"});
                table19.AddRow(new string[] {
                            "lamela_number",
                            "6 шт"});
                table19.AddRow(new string[] {
                            "section_weight",
                            "9 кг"});
                table19.AddRow(new string[] {
                            "t_profile",
                            "Так"});
                table19.AddRow(new string[] {
                            "lamela_height",
                            "135 мм"});
                table19.AddRow(new string[] {
                            "section_thickness",
                            "25 мм"});
                table19.AddRow(new string[] {
                            "type_section",
                            "Безкаркасна"});
                table19.AddRow(new string[] {
                            "type_bracing",
                            "Заклепки"});
                table19.AddRow(new string[] {
                            "p_plank",
                            "Так"});
                table19.AddRow(new string[] {
                            "kind_section",
                            "Проглядається"});
#line 214
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table19, "And ");
#line hidden
                global::Reqnroll.Table table20 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table20.AddRow(new string[] {
                            "img_photo1",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product10Photo1.png"});
                table20.AddRow(new string[] {
                            "img_photo2",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product10Photo2.png"});
                table20.AddRow(new string[] {
                            "img_photo3",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product10Photo3.png"});
#line 228
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table20, "And ");
#line hidden
#line 233
await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 235
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 236
 await testRunner.WhenAsync("select Product11", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table21 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table21.AddRow(new string[] {
                            "item_name",
                            "РАНЧО ФІГУРНЕ"});
                table21.AddRow(new string[] {
                            "metal_thickness",
                            "від 0,4 мм"});
                table21.AddRow(new string[] {
                            "section_width",
                            "до 3000 мм"});
                table21.AddRow(new string[] {
                            "lamela_number",
                            "6 шт"});
                table21.AddRow(new string[] {
                            "section_weight",
                            "8 кг"});
                table21.AddRow(new string[] {
                            "t_profile",
                            "Ні"});
                table21.AddRow(new string[] {
                            "lamela_height",
                            "130 мм"});
                table21.AddRow(new string[] {
                            "section_thickness",
                            "25 мм"});
                table21.AddRow(new string[] {
                            "type_section",
                            "Безкаркасна"});
                table21.AddRow(new string[] {
                            "type_bracing",
                            "Заклепки"});
                table21.AddRow(new string[] {
                            "p_plank",
                            "Так"});
                table21.AddRow(new string[] {
                            "kind_section",
                            "Проглядається"});
#line 237
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table21, "And ");
#line hidden
                global::Reqnroll.Table table22 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table22.AddRow(new string[] {
                            "img_photo1",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product11Photo1.png"});
                table22.AddRow(new string[] {
                            "img_photo2",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product11Photo2.png"});
                table22.AddRow(new string[] {
                            "img_photo3",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product11Photo3.png"});
#line 251
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table22, "And ");
#line hidden
#line 256
await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 258
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 259
 await testRunner.WhenAsync("select Product12", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table23 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table23.AddRow(new string[] {
                            "item_name",
                            "РАНЧО ФІГУРНЕ 2-ст"});
                table23.AddRow(new string[] {
                            "metal_thickness",
                            "від 0,4 мм"});
                table23.AddRow(new string[] {
                            "section_width",
                            "до 3000 мм"});
                table23.AddRow(new string[] {
                            "lamela_number",
                            "12 шт"});
                table23.AddRow(new string[] {
                            "section_weight",
                            "15 кг"});
                table23.AddRow(new string[] {
                            "t_profile",
                            "Ні"});
                table23.AddRow(new string[] {
                            "lamela_height",
                            "130 мм"});
                table23.AddRow(new string[] {
                            "section_thickness",
                            "42 мм"});
                table23.AddRow(new string[] {
                            "type_section",
                            "Безкаркасна"});
                table23.AddRow(new string[] {
                            "type_bracing",
                            "Заклепки"});
                table23.AddRow(new string[] {
                            "p_plank",
                            "Так"});
                table23.AddRow(new string[] {
                            "kind_section",
                            "Проглядається"});
#line 260
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table23, "And ");
#line hidden
                global::Reqnroll.Table table24 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table24.AddRow(new string[] {
                            "img_photo1",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product12Photo1.png"});
                table24.AddRow(new string[] {
                            "img_photo2",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product12Photo2.png"});
                table24.AddRow(new string[] {
                            "img_photo3",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product12Photo3.png"});
#line 274
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table24, "And ");
#line hidden
#line 279
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 281
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 282
 await testRunner.WhenAsync("select Product13", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table25 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table25.AddRow(new string[] {
                            "item_name",
                            "РАНЧО РІЗНОШИРИННЕ ПІВКРУГЛЕ"});
                table25.AddRow(new string[] {
                            "metal_thickness",
                            "від 0,4 мм"});
                table25.AddRow(new string[] {
                            "section_width",
                            "до 3000 мм"});
                table25.AddRow(new string[] {
                            "lamela_number",
                            "7 шт"});
                table25.AddRow(new string[] {
                            "section_weight",
                            "9 кг"});
                table25.AddRow(new string[] {
                            "t_profile",
                            "Так"});
                table25.AddRow(new string[] {
                            "lamela_height",
                            "175 та 80 мм"});
                table25.AddRow(new string[] {
                            "section_thickness",
                            "25 мм"});
                table25.AddRow(new string[] {
                            "type_section",
                            "Безкаркасна"});
                table25.AddRow(new string[] {
                            "type_bracing",
                            "Заклепки"});
                table25.AddRow(new string[] {
                            "p_plank",
                            "Так"});
                table25.AddRow(new string[] {
                            "kind_section",
                            "Проглядається"});
#line 283
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table25, "And ");
#line hidden
                global::Reqnroll.Table table26 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table26.AddRow(new string[] {
                            "img_photo1",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product13Photo1.png"});
                table26.AddRow(new string[] {
                            "img_photo2",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product13Photo2.png"});
                table26.AddRow(new string[] {
                            "img_photo3",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product13Photo3.png"});
#line 297
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table26, "And ");
#line hidden
#line 302
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 304
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 305
 await testRunner.WhenAsync("select Product14", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table27 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table27.AddRow(new string[] {
                            "item_name",
                            "РАНЧО КОСЕ З ПРОМІЖКОМ"});
                table27.AddRow(new string[] {
                            "metal_thickness",
                            "від 0,4 мм"});
                table27.AddRow(new string[] {
                            "section_width",
                            "до 3000 мм"});
                table27.AddRow(new string[] {
                            "lamela_number",
                            "5 шт"});
                table27.AddRow(new string[] {
                            "section_weight",
                            "8 кг"});
                table27.AddRow(new string[] {
                            "t_profile",
                            "Так"});
                table27.AddRow(new string[] {
                            "lamela_height",
                            "330 мм"});
                table27.AddRow(new string[] {
                            "section_thickness",
                            "25 мм"});
                table27.AddRow(new string[] {
                            "type_section",
                            "Безкаркасна"});
                table27.AddRow(new string[] {
                            "type_bracing",
                            "Заклепки"});
                table27.AddRow(new string[] {
                            "p_plank",
                            "Так"});
                table27.AddRow(new string[] {
                            "kind_section",
                            "Проглядається"});
#line 306
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table27, "And ");
#line hidden
                global::Reqnroll.Table table28 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table28.AddRow(new string[] {
                            "img_photo1",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product14Photo1.png"});
                table28.AddRow(new string[] {
                            "img_photo2",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product14Photo2.png"});
                table28.AddRow(new string[] {
                            "img_photo3",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product14Photo3.png"});
#line 320
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table28, "And ");
#line hidden
#line 325
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 327
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 328
 await testRunner.WhenAsync("select Product15", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table29 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table29.AddRow(new string[] {
                            "item_name",
                            "РАНЧО КОСЕ БЕЗ ПРОМІЖКУ"});
                table29.AddRow(new string[] {
                            "metal_thickness",
                            "від 0,4 мм"});
                table29.AddRow(new string[] {
                            "section_width",
                            "до 3000 мм"});
                table29.AddRow(new string[] {
                            "lamela_number",
                            "5 шт"});
                table29.AddRow(new string[] {
                            "section_weight",
                            "8 кг"});
                table29.AddRow(new string[] {
                            "t_profile",
                            "Так"});
                table29.AddRow(new string[] {
                            "lamela_height",
                            "330 мм"});
                table29.AddRow(new string[] {
                            "section_thickness",
                            "25 мм"});
                table29.AddRow(new string[] {
                            "type_section",
                            "Безкаркасна"});
                table29.AddRow(new string[] {
                            "type_bracing",
                            "Заклепки"});
                table29.AddRow(new string[] {
                            "p_plank",
                            "Так"});
                table29.AddRow(new string[] {
                            "kind_section",
                            "Не проглядається"});
#line 329
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table29, "And ");
#line hidden
                global::Reqnroll.Table table30 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table30.AddRow(new string[] {
                            "img_photo1",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product15Photo1.png"});
                table30.AddRow(new string[] {
                            "img_photo2",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product15Photo2.png"});
                table30.AddRow(new string[] {
                            "img_photo3",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product15Photo3.png"});
#line 343
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table30, "And ");
#line hidden
#line 348
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 350
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 351
 await testRunner.WhenAsync("select Product16", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table31 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table31.AddRow(new string[] {
                            "item_name",
                            "ТВІНГО КЛАСИЧНЕ"});
                table31.AddRow(new string[] {
                            "metal_thickness",
                            "від 0,4 мм"});
                table31.AddRow(new string[] {
                            "section_width",
                            "до 3000 мм"});
                table31.AddRow(new string[] {
                            "lamela_number",
                            "15 шт"});
                table31.AddRow(new string[] {
                            "section_weight",
                            "12 кг"});
                table31.AddRow(new string[] {
                            "t_profile",
                            "Ні"});
                table31.AddRow(new string[] {
                            "lamela_height",
                            "65 мм"});
                table31.AddRow(new string[] {
                            "section_thickness",
                            "60 мм або 80 мм"});
                table31.AddRow(new string[] {
                            "type_section",
                            "Безкаркасна"});
                table31.AddRow(new string[] {
                            "type_bracing",
                            "Заклепки"});
                table31.AddRow(new string[] {
                            "p_plank",
                            "Так"});
                table31.AddRow(new string[] {
                            "kind_section",
                            "Не проглядається"});
#line 352
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table31, "And ");
#line hidden
                global::Reqnroll.Table table32 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table32.AddRow(new string[] {
                            "img_photo1",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product16Photo1.png"});
                table32.AddRow(new string[] {
                            "img_photo2",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product16Photo2.png"});
                table32.AddRow(new string[] {
                            "img_photo3",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product16Photo3.png"});
#line 366
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table32, "And ");
#line hidden
#line 371
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 373
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 374
 await testRunner.WhenAsync("select Product17", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table33 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table33.AddRow(new string[] {
                            "item_name",
                            "ТВІНГО ПРЯМЕ"});
                table33.AddRow(new string[] {
                            "metal_thickness",
                            "від 0,4 мм"});
                table33.AddRow(new string[] {
                            "section_width",
                            "до 3000 мм"});
                table33.AddRow(new string[] {
                            "lamela_number",
                            "14 шт"});
                table33.AddRow(new string[] {
                            "section_weight",
                            "12 кг"});
                table33.AddRow(new string[] {
                            "t_profile",
                            "Ні"});
                table33.AddRow(new string[] {
                            "lamela_height",
                            "75 мм"});
                table33.AddRow(new string[] {
                            "section_thickness",
                            "60 мм або 80 мм"});
                table33.AddRow(new string[] {
                            "type_section",
                            "Безкаркасна"});
                table33.AddRow(new string[] {
                            "type_bracing",
                            "Заклепки"});
                table33.AddRow(new string[] {
                            "p_plank",
                            "Так"});
                table33.AddRow(new string[] {
                            "kind_section",
                            "Не проглядається"});
#line 375
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table33, "And ");
#line hidden
                global::Reqnroll.Table table34 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table34.AddRow(new string[] {
                            "img_photo1",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product17Photo1.png"});
                table34.AddRow(new string[] {
                            "img_photo2",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product17Photo2.png"});
                table34.AddRow(new string[] {
                            "img_photo3",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product17Photo3.png"});
#line 389
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table34, "And ");
#line hidden
#line 394
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 396
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 397
 await testRunner.WhenAsync("select Product18", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table35 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table35.AddRow(new string[] {
                            "item_name",
                            "ТВІНГО DUOS"});
                table35.AddRow(new string[] {
                            "metal_thickness",
                            "від 0,4 мм"});
                table35.AddRow(new string[] {
                            "section_width",
                            "до 3000 мм"});
                table35.AddRow(new string[] {
                            "lamela_number",
                            "18 шт"});
                table35.AddRow(new string[] {
                            "section_weight",
                            "10 кг"});
                table35.AddRow(new string[] {
                            "t_profile",
                            "Ні"});
                table35.AddRow(new string[] {
                            "lamela_height",
                            "55 мм"});
                table35.AddRow(new string[] {
                            "section_thickness",
                            "60 мм"});
                table35.AddRow(new string[] {
                            "type_section",
                            "Безкаркасна"});
                table35.AddRow(new string[] {
                            "type_bracing",
                            "Заклепки"});
                table35.AddRow(new string[] {
                            "p_plank",
                            "Так"});
                table35.AddRow(new string[] {
                            "kind_section",
                            "Не проглядається"});
#line 398
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table35, "And ");
#line hidden
                global::Reqnroll.Table table36 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table36.AddRow(new string[] {
                            "img_photo1",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product18Photo1.png"});
                table36.AddRow(new string[] {
                            "img_photo2",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product18Photo2.png"});
                table36.AddRow(new string[] {
                            "img_photo3",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product18Photo3.png"});
#line 412
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table36, "And ");
#line hidden
#line 417
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 419
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 420
 await testRunner.WhenAsync("select Product19", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table37 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table37.AddRow(new string[] {
                            "item_name",
                            "ГОРИЗОНТ 170 мм"});
                table37.AddRow(new string[] {
                            "metal_thickness",
                            "від 0,4 мм"});
                table37.AddRow(new string[] {
                            "section_width",
                            "до 3000 мм"});
                table37.AddRow(new string[] {
                            "lamela_number",
                            "5 шт"});
                table37.AddRow(new string[] {
                            "section_weight",
                            "7 кг"});
                table37.AddRow(new string[] {
                            "t_profile",
                            "Ні"});
                table37.AddRow(new string[] {
                            "lamela_height",
                            "230 мм"});
                table37.AddRow(new string[] {
                            "section_thickness",
                            "25 мм"});
                table37.AddRow(new string[] {
                            "type_section",
                            "Безкаркасна"});
                table37.AddRow(new string[] {
                            "type_bracing",
                            "Заклепки"});
                table37.AddRow(new string[] {
                            "p_plank",
                            "Так"});
                table37.AddRow(new string[] {
                            "kind_section",
                            "Не проглядається"});
#line 421
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table37, "And ");
#line hidden
                global::Reqnroll.Table table38 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table38.AddRow(new string[] {
                            "img_photo1",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product19Photo1.png"});
                table38.AddRow(new string[] {
                            "img_photo2",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product19Photo2.png"});
                table38.AddRow(new string[] {
                            "img_photo3",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product19Photo3.png"});
#line 435
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table38, "And ");
#line hidden
#line 440
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 442
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 443
 await testRunner.WhenAsync("select Product20", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table39 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table39.AddRow(new string[] {
                            "item_name",
                            "ГОРИЗОНТ 170 мм 2-ст"});
                table39.AddRow(new string[] {
                            "metal_thickness",
                            "від 0,4 мм"});
                table39.AddRow(new string[] {
                            "section_width",
                            "до 3000 мм"});
                table39.AddRow(new string[] {
                            "lamela_number",
                            "10 шт"});
                table39.AddRow(new string[] {
                            "section_weight",
                            "14 кг"});
                table39.AddRow(new string[] {
                            "t_profile",
                            "Ні"});
                table39.AddRow(new string[] {
                            "lamela_height",
                            "230 мм"});
                table39.AddRow(new string[] {
                            "section_thickness",
                            "45 мм"});
                table39.AddRow(new string[] {
                            "type_section",
                            "Безкаркасна"});
                table39.AddRow(new string[] {
                            "type_bracing",
                            "Заклепки"});
                table39.AddRow(new string[] {
                            "p_plank",
                            "Так"});
                table39.AddRow(new string[] {
                            "kind_section",
                            "Не проглядається"});
#line 444
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table39, "And ");
#line hidden
                global::Reqnroll.Table table40 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table40.AddRow(new string[] {
                            "img_photo1",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product20Photo1.png"});
                table40.AddRow(new string[] {
                            "img_photo2",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product20Photo2.png"});
                table40.AddRow(new string[] {
                            "img_photo3",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product20Photo3.png"});
#line 458
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table40, "And ");
#line hidden
#line 463
await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 465
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 466
 await testRunner.WhenAsync("select Product21", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table41 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table41.AddRow(new string[] {
                            "item_name",
                            "ГОРИЗОНТ 225 мм"});
                table41.AddRow(new string[] {
                            "metal_thickness",
                            "від 0,4 мм"});
                table41.AddRow(new string[] {
                            "section_width",
                            "до 3000 мм"});
                table41.AddRow(new string[] {
                            "lamela_number",
                            "4 шт"});
                table41.AddRow(new string[] {
                            "section_weight",
                            "8 кг"});
                table41.AddRow(new string[] {
                            "t_profile",
                            "Так"});
                table41.AddRow(new string[] {
                            "lamela_height",
                            "290 мм"});
                table41.AddRow(new string[] {
                            "section_thickness",
                            "25 мм"});
                table41.AddRow(new string[] {
                            "type_section",
                            "Безкаркасна"});
                table41.AddRow(new string[] {
                            "type_bracing",
                            "Заклепки"});
                table41.AddRow(new string[] {
                            "p_plank",
                            "Так"});
                table41.AddRow(new string[] {
                            "kind_section",
                            "Не проглядається"});
#line 467
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table41, "And ");
#line hidden
                global::Reqnroll.Table table42 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table42.AddRow(new string[] {
                            "img_photo1",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product21Photo1.png"});
                table42.AddRow(new string[] {
                            "img_photo2",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product21Photo2.png"});
                table42.AddRow(new string[] {
                            "img_photo3",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product21Photo3.png"});
#line 481
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table42, "And ");
#line hidden
#line 486
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 488
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 489
 await testRunner.WhenAsync("select Product22", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table43 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table43.AddRow(new string[] {
                            "item_name",
                            "ГОРИЗОНТ 225 мм 2-ст"});
                table43.AddRow(new string[] {
                            "metal_thickness",
                            "від 0,4 мм"});
                table43.AddRow(new string[] {
                            "section_width",
                            "до 3000 мм"});
                table43.AddRow(new string[] {
                            "lamela_number",
                            "8 шт"});
                table43.AddRow(new string[] {
                            "section_weight",
                            "16 кг"});
                table43.AddRow(new string[] {
                            "t_profile",
                            "Ні"});
                table43.AddRow(new string[] {
                            "lamela_height",
                            "290 мм"});
                table43.AddRow(new string[] {
                            "section_thickness",
                            "45 мм"});
                table43.AddRow(new string[] {
                            "type_section",
                            "Безкаркасна"});
                table43.AddRow(new string[] {
                            "type_bracing",
                            "Заклепки"});
                table43.AddRow(new string[] {
                            "p_plank",
                            "Так"});
                table43.AddRow(new string[] {
                            "kind_section",
                            "Не проглядається"});
#line 490
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table43, "And ");
#line hidden
                global::Reqnroll.Table table44 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table44.AddRow(new string[] {
                            "img_photo1",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product22Photo1.png"});
                table44.AddRow(new string[] {
                            "img_photo2",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product22Photo2.png"});
                table44.AddRow(new string[] {
                            "img_photo3",
                            "https://dimdvirdevelop.netlify.app/img/category02/Product22Photo3.png"});
#line 504
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table44, "And ");
#line hidden
#line 509
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 510
 await testRunner.AndAsync("compare data", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
    }
}
#pragma warning restore
#endregion
