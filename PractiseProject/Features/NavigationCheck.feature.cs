// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by Reqnroll (https://www.reqnroll.net/).
//      Reqnroll Version:2.0.0.0
//      Reqnroll Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
using Reqnroll;
namespace PractiseProject.Features
{
    
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Reqnroll", "2.0.0.0")]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("NavigationCheck")]
    [NUnit.Framework.FixtureLifeCycleAttribute(NUnit.Framework.LifeCycle.InstancePerTestCase)]
    public partial class NavigationCheckFeature
    {
        
        private global::Reqnroll.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
        private static global::Reqnroll.FeatureInfo featureInfo = new global::Reqnroll.FeatureInfo(new global::System.Globalization.CultureInfo("en-US"), "Features", "NavigationCheck", "A short summary of the feature", global::Reqnroll.ProgrammingLanguage.CSharp, featureTags);
        
#line 1 "NavigationCheck.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public static async global::System.Threading.Tasks.Task FeatureSetupAsync()
        {
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public static async global::System.Threading.Tasks.Task FeatureTearDownAsync()
        {
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public async global::System.Threading.Tasks.Task TestInitializeAsync()
        {
            testRunner = global::Reqnroll.TestRunnerManager.GetTestRunnerForAssembly(featureHint: featureInfo);
            try
            {
                if (((testRunner.FeatureContext != null) 
                            && (testRunner.FeatureContext.FeatureInfo.Equals(featureInfo) == false)))
                {
                    await testRunner.OnFeatureEndAsync();
                }
            }
            finally
            {
                if (((testRunner.FeatureContext != null) 
                            && testRunner.FeatureContext.BeforeFeatureHookFailed))
                {
                    throw new global::Reqnroll.ReqnrollException("Scenario skipped because of previous before feature hook error");
                }
                if ((testRunner.FeatureContext == null))
                {
                    await testRunner.OnFeatureStartAsync(featureInfo);
                }
            }
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public async global::System.Threading.Tasks.Task TestTearDownAsync()
        {
            if ((testRunner == null))
            {
                return;
            }
            try
            {
                await testRunner.OnScenarioEndAsync();
            }
            finally
            {
                global::Reqnroll.TestRunnerManager.ReleaseTestRunner(testRunner);
                testRunner = null;
            }
        }
        
        public void ScenarioInitialize(global::Reqnroll.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public async global::System.Threading.Tasks.Task ScenarioStartAsync()
        {
            await testRunner.OnScenarioStartAsync();
        }
        
        public async global::System.Threading.Tasks.Task ScenarioCleanupAsync()
        {
            await testRunner.CollectScenarioErrorsAsync();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("NavigationCheck- Chrome")]
        [NUnit.Framework.CategoryAttribute("tag1")]
        public async global::System.Threading.Tasks.Task NavigationCheck_Chrome()
        {
            string[] tagsOfScenario = new string[] {
                    "tag1"};
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("NavigationCheck- Chrome", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 7
 await testRunner.GivenAsync("Choose button HomeButton in navigation", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
                global::Reqnroll.Table table49 = new global::Reqnroll.Table(new string[] {
                            "OptionName",
                            "method",
                            "valueName",
                            "valueType",
                            "elementType",
                            "compareType",
                            "isDisplayed",
                            "compareData"});
                table49.AddRow(new string[] {
                            "Logo",
                            "pictureCheck",
                            "Дім-Двір",
                            "img",
                            "alt",
                            "src",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/img/logo.jpg"});
                table49.AddRow(new string[] {
                            "Phone-number",
                            "textCheck",
                            "navbar-text",
                            "span",
                            "class",
                            "textContent",
                            "true,true",
                            "380-98-868-63-63"});
                table49.AddRow(new string[] {
                            "Instagram-icon",
                            "iconCheck",
                            "icon1",
                            "a",
                            "id",
                            "href",
                            "true,true",
                            "https://www.instagram.com/dim_dvir?igsh=MTdtZWlvZWFqNDF3Nw%3D%3D&utm_source=qr"});
                table49.AddRow(new string[] {
                            "facebook-icon",
                            "iconCheck",
                            "icon2",
                            "a",
                            "id",
                            "href",
                            "true,true",
                            "https://www.facebook.com/share/1C7ca43qC7"});
                table49.AddRow(new string[] {
                            "HomeButton",
                            "buttonCheck",
                            "Головна",
                            "a",
                            "textContent",
                            "href",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/home"});
                table49.AddRow(new string[] {
                            "AboutButton",
                            "buttonCheck",
                            "Про нас",
                            "a",
                            "textContent",
                            "href",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/about-us"});
                table49.AddRow(new string[] {
                            "Catalog",
                            "buttonCheck",
                            "Каталог наших робіт",
                            "a",
                            "textContent",
                            "href",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/portfolio-gallery"});
#line 8
  await testRunner.WhenAsync("Check all components in navigation", ((string)(null)), table49, "When ");
#line hidden
#line 17
 await testRunner.ThenAsync("close browser", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("NavigationCheck- Edge - inprivate")]
        public async global::System.Threading.Tasks.Task NavigationCheck_Edge_Inprivate()
        {
            string[] tagsOfScenario = ((string[])(null));
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("NavigationCheck- Edge - inprivate", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 19
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 20
 await testRunner.GivenAsync("Choose button HomeButton in navigation", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
                global::Reqnroll.Table table50 = new global::Reqnroll.Table(new string[] {
                            "OptionName",
                            "method",
                            "valueName",
                            "valueType",
                            "elementType",
                            "compareType",
                            "isDisplayed",
                            "compareData"});
                table50.AddRow(new string[] {
                            "Logo",
                            "pictureCheck",
                            "Дім-Двір",
                            "img",
                            "alt",
                            "src",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/img/logo.jpg"});
                table50.AddRow(new string[] {
                            "Phone-number",
                            "textCheck",
                            "navbar-text",
                            "span",
                            "class",
                            "textContent",
                            "true,true",
                            "380-98-868-63-63"});
                table50.AddRow(new string[] {
                            "Instagram-icon",
                            "iconCheck",
                            "icon1",
                            "a",
                            "id",
                            "href",
                            "true,true",
                            "https://www.instagram.com/dim_dvir?igsh=MTdtZWlvZWFqNDF3Nw%3D%3D&utm_source=qr"});
                table50.AddRow(new string[] {
                            "facebook-icon",
                            "iconCheck",
                            "icon2",
                            "a",
                            "id",
                            "href",
                            "true,true",
                            "https://www.facebook.com/share/1C7ca43qC7"});
                table50.AddRow(new string[] {
                            "HomeButton",
                            "buttonCheck",
                            "Головна",
                            "a",
                            "textContent",
                            "href",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/home"});
                table50.AddRow(new string[] {
                            "AboutButton",
                            "buttonCheck",
                            "Про нас",
                            "a",
                            "textContent",
                            "href",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/about-us"});
                table50.AddRow(new string[] {
                            "Catalog",
                            "buttonCheck",
                            "Каталог наших робіт",
                            "a",
                            "textContent",
                            "href",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/portfolio-gallery"});
#line 21
 await testRunner.WhenAsync("Check all components in navigation", ((string)(null)), table50, "When ");
#line hidden
#line 30
 await testRunner.ThenAsync("close browser", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("NavigationCheckAboutPage- Chrome - inprivate")]
        public async global::System.Threading.Tasks.Task NavigationCheckAboutPage_Chrome_Inprivate()
        {
            string[] tagsOfScenario = ((string[])(null));
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("NavigationCheckAboutPage- Chrome - inprivate", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 32
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 33
 await testRunner.GivenAsync("Choose button AboutUsButton in navigation", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
                global::Reqnroll.Table table51 = new global::Reqnroll.Table(new string[] {
                            "OptionName",
                            "method",
                            "valueName",
                            "valueType",
                            "elementType",
                            "compareType",
                            "isDisplayed",
                            "compareData"});
                table51.AddRow(new string[] {
                            "Logo",
                            "pictureCheck",
                            "Дім-Двір",
                            "img",
                            "alt",
                            "src",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/img/logo.jpg"});
                table51.AddRow(new string[] {
                            "Phone-number",
                            "textCheck",
                            "navbar-text",
                            "span",
                            "class",
                            "textContent",
                            "true,true",
                            "380-98-868-63-63"});
                table51.AddRow(new string[] {
                            "Instagram-icon",
                            "iconCheck",
                            "icon1",
                            "a",
                            "id",
                            "href",
                            "true,true",
                            "https://www.instagram.com/dim_dvir?igsh=MTdtZWlvZWFqNDF3Nw%3D%3D&utm_source=qr"});
                table51.AddRow(new string[] {
                            "facebook-icon",
                            "iconCheck",
                            "icon2",
                            "a",
                            "id",
                            "href",
                            "true,true",
                            "https://www.facebook.com/share/1C7ca43qC7"});
                table51.AddRow(new string[] {
                            "HomeButton",
                            "buttonCheck",
                            "Головна",
                            "a",
                            "textContent",
                            "href",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/home"});
                table51.AddRow(new string[] {
                            "AboutButton",
                            "buttonCheck",
                            "Про нас",
                            "a",
                            "textContent",
                            "href",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/about-us"});
                table51.AddRow(new string[] {
                            "Catalog",
                            "buttonCheck",
                            "Каталог наших робіт",
                            "a",
                            "textContent",
                            "href",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/portfolio-gallery"});
#line 34
 await testRunner.WhenAsync("Check all components in navigation", ((string)(null)), table51, "When ");
#line hidden
#line 43
 await testRunner.ThenAsync("close browser", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("NavigationCheckAboutPage- Edge - inprivate")]
        public async global::System.Threading.Tasks.Task NavigationCheckAboutPage_Edge_Inprivate()
        {
            string[] tagsOfScenario = ((string[])(null));
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("NavigationCheckAboutPage- Edge - inprivate", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 45
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 46
 await testRunner.GivenAsync("Choose button AboutUsButton in navigation", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
                global::Reqnroll.Table table52 = new global::Reqnroll.Table(new string[] {
                            "OptionName",
                            "method",
                            "valueName",
                            "valueType",
                            "elementType",
                            "compareType",
                            "isDisplayed",
                            "compareData"});
                table52.AddRow(new string[] {
                            "Logo",
                            "pictureCheck",
                            "Дім-Двір",
                            "img",
                            "alt",
                            "src",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/img/logo.jpg"});
                table52.AddRow(new string[] {
                            "Phone-number",
                            "textCheck",
                            "navbar-text",
                            "span",
                            "class",
                            "textContent",
                            "true,true",
                            "380-98-868-63-63"});
                table52.AddRow(new string[] {
                            "Instagram-icon",
                            "iconCheck",
                            "icon1",
                            "a",
                            "id",
                            "href",
                            "true,true",
                            "https://www.instagram.com/dim_dvir?igsh=MTdtZWlvZWFqNDF3Nw%3D%3D&utm_source=qr"});
                table52.AddRow(new string[] {
                            "facebook-icon",
                            "iconCheck",
                            "icon2",
                            "a",
                            "id",
                            "href",
                            "true,true",
                            "https://www.facebook.com/share/1C7ca43qC7"});
                table52.AddRow(new string[] {
                            "HomeButton",
                            "buttonCheck",
                            "Головна",
                            "a",
                            "textContent",
                            "href",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/home"});
                table52.AddRow(new string[] {
                            "AboutButton",
                            "buttonCheck",
                            "Про нас",
                            "a",
                            "textContent",
                            "href",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/about-us"});
                table52.AddRow(new string[] {
                            "Catalog",
                            "buttonCheck",
                            "Каталог наших робіт",
                            "a",
                            "textContent",
                            "href",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/portfolio-gallery"});
#line 47
 await testRunner.WhenAsync("Check all components in navigation", ((string)(null)), table52, "When ");
#line hidden
#line 56
 await testRunner.ThenAsync("close browser", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("NavigationCheckCatalogePage- Edge - inprivate")]
        public async global::System.Threading.Tasks.Task NavigationCheckCatalogePage_Edge_Inprivate()
        {
            string[] tagsOfScenario = ((string[])(null));
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("NavigationCheckCatalogePage- Edge - inprivate", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 59
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 60
 await testRunner.GivenAsync("Choose button CatalogeButton in navigation", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
                global::Reqnroll.Table table53 = new global::Reqnroll.Table(new string[] {
                            "OptionName",
                            "method",
                            "valueName",
                            "valueType",
                            "elementType",
                            "compareType",
                            "isDisplayed",
                            "compareData"});
                table53.AddRow(new string[] {
                            "Logo",
                            "pictureCheck",
                            "Дім-Двір",
                            "img",
                            "alt",
                            "src",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/img/logo.jpg"});
                table53.AddRow(new string[] {
                            "Phone-number",
                            "textCheck",
                            "navbar-text",
                            "span",
                            "class",
                            "textContent",
                            "true,true",
                            "380-98-868-63-63"});
                table53.AddRow(new string[] {
                            "Instagram-icon",
                            "iconCheck",
                            "icon1",
                            "a",
                            "id",
                            "href",
                            "true,true",
                            "https://www.instagram.com/dim_dvir?igsh=MTdtZWlvZWFqNDF3Nw%3D%3D&utm_source=qr"});
                table53.AddRow(new string[] {
                            "facebook-icon",
                            "iconCheck",
                            "icon2",
                            "a",
                            "id",
                            "href",
                            "true,true",
                            "https://www.facebook.com/share/1C7ca43qC7"});
                table53.AddRow(new string[] {
                            "HomeButton",
                            "buttonCheck",
                            "Головна",
                            "a",
                            "textContent",
                            "href",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/home"});
                table53.AddRow(new string[] {
                            "AboutButton",
                            "buttonCheck",
                            "Про нас",
                            "a",
                            "textContent",
                            "href",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/about-us"});
                table53.AddRow(new string[] {
                            "Catalog",
                            "buttonCheck",
                            "Каталог наших робіт",
                            "a",
                            "textContent",
                            "href",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/portfolio-gallery"});
#line 61
 await testRunner.WhenAsync("Check all components in navigation", ((string)(null)), table53, "When ");
#line hidden
#line 70
 await testRunner.ThenAsync("close browser", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("NavigationCheckCatalogePage- Chrome - inprivate")]
        public async global::System.Threading.Tasks.Task NavigationCheckCatalogePage_Chrome_Inprivate()
        {
            string[] tagsOfScenario = ((string[])(null));
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("NavigationCheckCatalogePage- Chrome - inprivate", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 72
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 73
 await testRunner.GivenAsync("Choose button CatalogeButton in navigation", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
                global::Reqnroll.Table table54 = new global::Reqnroll.Table(new string[] {
                            "OptionName",
                            "method",
                            "valueName",
                            "valueType",
                            "elementType",
                            "compareType",
                            "isDisplayed",
                            "compareData"});
                table54.AddRow(new string[] {
                            "Logo",
                            "pictureCheck",
                            "Дім-Двір",
                            "img",
                            "alt",
                            "src",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/img/logo.jpg"});
                table54.AddRow(new string[] {
                            "Phone-number",
                            "textCheck",
                            "navbar-text",
                            "span",
                            "class",
                            "textContent",
                            "true,true",
                            "380-98-868-63-63"});
                table54.AddRow(new string[] {
                            "Instagram-icon",
                            "iconCheck",
                            "icon1",
                            "a",
                            "id",
                            "href",
                            "true,true",
                            "https://www.instagram.com/dim_dvir?igsh=MTdtZWlvZWFqNDF3Nw%3D%3D&utm_source=qr"});
                table54.AddRow(new string[] {
                            "facebook-icon",
                            "iconCheck",
                            "icon2",
                            "a",
                            "id",
                            "href",
                            "true,true",
                            "https://www.facebook.com/share/1C7ca43qC7"});
                table54.AddRow(new string[] {
                            "HomeButton",
                            "buttonCheck",
                            "Головна",
                            "a",
                            "textContent",
                            "href",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/home"});
                table54.AddRow(new string[] {
                            "AboutButton",
                            "buttonCheck",
                            "Про нас",
                            "a",
                            "textContent",
                            "href",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/about-us"});
                table54.AddRow(new string[] {
                            "Catalog",
                            "buttonCheck",
                            "Каталог наших робіт",
                            "a",
                            "textContent",
                            "href",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/portfolio-gallery"});
#line 74
 await testRunner.WhenAsync("Check all components in navigation", ((string)(null)), table54, "When ");
#line hidden
#line 83
 await testRunner.ThenAsync("close browser", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("NavigationCheckContactsPage- Edge - inprivate")]
        public async global::System.Threading.Tasks.Task NavigationCheckContactsPage_Edge_Inprivate()
        {
            string[] tagsOfScenario = ((string[])(null));
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("NavigationCheckContactsPage- Edge - inprivate", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 85
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 86
 await testRunner.GivenAsync("Choose button ContactsButton in navigation", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
                global::Reqnroll.Table table55 = new global::Reqnroll.Table(new string[] {
                            "OptionName",
                            "method",
                            "valueName",
                            "valueType",
                            "elementType",
                            "compareType",
                            "isDisplayed",
                            "compareData"});
                table55.AddRow(new string[] {
                            "Logo",
                            "pictureCheck",
                            "Дім-Двір",
                            "img",
                            "alt",
                            "src",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/img/logo.jpg"});
                table55.AddRow(new string[] {
                            "Phone-number",
                            "textCheck",
                            "navbar-text",
                            "span",
                            "class",
                            "textContent",
                            "true,true",
                            "380-98-868-63-63"});
                table55.AddRow(new string[] {
                            "Instagram-icon",
                            "iconCheck",
                            "icon1",
                            "a",
                            "id",
                            "href",
                            "true,true",
                            "https://www.instagram.com/dim_dvir?igsh=MTdtZWlvZWFqNDF3Nw%3D%3D&utm_source=qr"});
                table55.AddRow(new string[] {
                            "facebook-icon",
                            "iconCheck",
                            "icon2",
                            "a",
                            "id",
                            "href",
                            "true,true",
                            "https://www.facebook.com/share/1C7ca43qC7"});
                table55.AddRow(new string[] {
                            "HomeButton",
                            "buttonCheck",
                            "Головна",
                            "a",
                            "textContent",
                            "href",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/home"});
                table55.AddRow(new string[] {
                            "AboutButton",
                            "buttonCheck",
                            "Про нас",
                            "a",
                            "textContent",
                            "href",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/about-us"});
                table55.AddRow(new string[] {
                            "Catalog",
                            "buttonCheck",
                            "Каталог наших робіт",
                            "a",
                            "textContent",
                            "href",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/portfolio-gallery"});
#line 87
 await testRunner.WhenAsync("Check all components in navigation", ((string)(null)), table55, "When ");
#line hidden
#line 96
 await testRunner.ThenAsync("close browser", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("NavigationCheckContactsPage- Chrome - inprivate")]
        public async global::System.Threading.Tasks.Task NavigationCheckContactsPage_Chrome_Inprivate()
        {
            string[] tagsOfScenario = ((string[])(null));
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("NavigationCheckContactsPage- Chrome - inprivate", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 98
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 99
 await testRunner.GivenAsync("Choose button ContactsButton in navigation", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
                global::Reqnroll.Table table56 = new global::Reqnroll.Table(new string[] {
                            "OptionName",
                            "method",
                            "valueName",
                            "valueType",
                            "elementType",
                            "compareType",
                            "isDisplayed",
                            "compareData"});
                table56.AddRow(new string[] {
                            "Logo",
                            "pictureCheck",
                            "Дім-Двір",
                            "img",
                            "alt",
                            "src",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/img/logo.jpg"});
                table56.AddRow(new string[] {
                            "Phone-number",
                            "textCheck",
                            "navbar-text",
                            "span",
                            "class",
                            "textContent",
                            "true,true",
                            "380-98-868-63-63"});
                table56.AddRow(new string[] {
                            "Instagram-icon",
                            "iconCheck",
                            "icon1",
                            "a",
                            "id",
                            "href",
                            "true,true",
                            "https://www.instagram.com/dim_dvir?igsh=MTdtZWlvZWFqNDF3Nw%3D%3D&utm_source=qr"});
                table56.AddRow(new string[] {
                            "facebook-icon",
                            "iconCheck",
                            "icon2",
                            "a",
                            "id",
                            "href",
                            "true,true",
                            "https://www.facebook.com/share/1C7ca43qC7"});
                table56.AddRow(new string[] {
                            "HomeButton",
                            "buttonCheck",
                            "Головна",
                            "a",
                            "textContent",
                            "href",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/home"});
                table56.AddRow(new string[] {
                            "AboutButton",
                            "buttonCheck",
                            "Про нас",
                            "a",
                            "textContent",
                            "href",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/about-us"});
                table56.AddRow(new string[] {
                            "Catalog",
                            "buttonCheck",
                            "Каталог наших робіт",
                            "a",
                            "textContent",
                            "href",
                            "true,true",
                            "https://dimdvirdevelop.netlify.app/portfolio-gallery"});
#line 100
 await testRunner.WhenAsync("Check all components in navigation", ((string)(null)), table56, "When ");
#line hidden
#line 109
 await testRunner.ThenAsync("close browser", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
    }
}
#pragma warning restore
#endregion
