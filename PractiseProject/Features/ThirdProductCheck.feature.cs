// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by Reqnroll (https://www.reqnroll.net/).
//      Reqnroll Version:2.0.0.0
//      Reqnroll Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
using Reqnroll;
namespace PractiseProject.Features
{
    
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Reqnroll", "2.0.0.0")]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ThirdProductCheck")]
    [NUnit.Framework.FixtureLifeCycleAttribute(NUnit.Framework.LifeCycle.InstancePerTestCase)]
    public partial class ThirdProductCheckFeature
    {
        
        private global::Reqnroll.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
        private static global::Reqnroll.FeatureInfo featureInfo = new global::Reqnroll.FeatureInfo(new global::System.Globalization.CultureInfo("en-US"), "Features", "ThirdProductCheck", "A short summary of the feature", global::Reqnroll.ProgrammingLanguage.CSharp, featureTags);
        
#line 1 "ThirdProductCheck.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public static async global::System.Threading.Tasks.Task FeatureSetupAsync()
        {
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public static async global::System.Threading.Tasks.Task FeatureTearDownAsync()
        {
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public async global::System.Threading.Tasks.Task TestInitializeAsync()
        {
            testRunner = global::Reqnroll.TestRunnerManager.GetTestRunnerForAssembly(featureHint: featureInfo);
            try
            {
                if (((testRunner.FeatureContext != null) 
                            && (testRunner.FeatureContext.FeatureInfo.Equals(featureInfo) == false)))
                {
                    await testRunner.OnFeatureEndAsync();
                }
            }
            finally
            {
                if (((testRunner.FeatureContext != null) 
                            && testRunner.FeatureContext.BeforeFeatureHookFailed))
                {
                    throw new global::Reqnroll.ReqnrollException("Scenario skipped because of previous before feature hook error");
                }
                if ((testRunner.FeatureContext == null))
                {
                    await testRunner.OnFeatureStartAsync(featureInfo);
                }
            }
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public async global::System.Threading.Tasks.Task TestTearDownAsync()
        {
            if ((testRunner == null))
            {
                return;
            }
            try
            {
                await testRunner.OnScenarioEndAsync();
            }
            finally
            {
                global::Reqnroll.TestRunnerManager.ReleaseTestRunner(testRunner);
                testRunner = null;
            }
        }
        
        public void ScenarioInitialize(global::Reqnroll.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public async global::System.Threading.Tasks.Task ScenarioStartAsync()
        {
            await testRunner.OnScenarioStartAsync();
        }
        
        public async global::System.Threading.Tasks.Task ScenarioCleanupAsync()
        {
            await testRunner.CollectScenarioErrorsAsync();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CheckProduct1 - Chrome")]
        [NUnit.Framework.CategoryAttribute("tag1")]
        public async global::System.Threading.Tasks.Task CheckProduct1_Chrome()
        {
            string[] tagsOfScenario = new string[] {
                    "tag1"};
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("CheckProduct1 - Chrome", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 7
 await testRunner.GivenAsync("Choose one of Production5 in section", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 8
 await testRunner.WhenAsync("select Product1", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table71 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table71.AddRow(new string[] {
                            "item_name",
                            "КОНЬОК ФІГУРНИЙ"});
                table71.AddRow(new string[] {
                            "length1",
                            "1970 мм"});
                table71.AddRow(new string[] {
                            "width1",
                            "237 мм"});
#line 9
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table71, "And ");
#line hidden
                global::Reqnroll.Table table72 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table72.AddRow(new string[] {
                            "photo_main",
                            "https://dimdvirdevelop.netlify.app/img/category03/product01.png"});
                table72.AddRow(new string[] {
                            "photo_drawing",
                            "https://dimdvirdevelop.netlify.app/img/category03/product0102.png"});
#line 14
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table72, "And ");
#line hidden
#line 18
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 20
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 21
 await testRunner.WhenAsync("select Product2", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table73 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table73.AddRow(new string[] {
                            "item_name",
                            "КОНЬОК УНІВЕРСАЛЬНИЙ"});
                table73.AddRow(new string[] {
                            "length1",
                            "2000 мм"});
                table73.AddRow(new string[] {
                            "width1",
                            "310 мм"});
                table73.AddRow(new string[] {
                            "length2",
                            "2000 мм"});
                table73.AddRow(new string[] {
                            "width2",
                            "416 мм"});
#line 22
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table73, "And ");
#line hidden
                global::Reqnroll.Table table74 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table74.AddRow(new string[] {
                            "photo_main",
                            "https://dimdvirdevelop.netlify.app/img/category03/product02.png"});
                table74.AddRow(new string[] {
                            "photo_drawing",
                            "https://dimdvirdevelop.netlify.app/img/category03/product0202.png"});
#line 30
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table74, "And ");
#line hidden
#line 34
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 36
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 37
 await testRunner.WhenAsync("select Product3", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table75 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table75.AddRow(new string[] {
                            "item_name",
                            "КОНЬОК ПЛОСКИЙ"});
                table75.AddRow(new string[] {
                            "length1",
                            "2000 мм"});
                table75.AddRow(new string[] {
                            "width1",
                            "250 мм"});
                table75.AddRow(new string[] {
                            "length2",
                            "2000 мм"});
                table75.AddRow(new string[] {
                            "width2",
                            "310 мм"});
                table75.AddRow(new string[] {
                            "length3",
                            "2000 мм"});
                table75.AddRow(new string[] {
                            "width3",
                            "416 мм"});
#line 38
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table75, "And ");
#line hidden
                global::Reqnroll.Table table76 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table76.AddRow(new string[] {
                            "photo_main",
                            "https://dimdvirdevelop.netlify.app/img/category03/product03.png"});
                table76.AddRow(new string[] {
                            "photo_drawing",
                            "https://dimdvirdevelop.netlify.app/img/category03/product0302.png"});
#line 48
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table76, "And ");
#line hidden
#line 52
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 54
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 55
 await testRunner.WhenAsync("select Product4", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table77 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table77.AddRow(new string[] {
                            "item_name",
                            "КОНЬОК ДЕКОРАТИВНИЙ"});
                table77.AddRow(new string[] {
                            "length1",
                            "2000 мм"});
                table77.AddRow(new string[] {
                            "width1",
                            "250 мм"});
                table77.AddRow(new string[] {
                            "length2",
                            "2000 мм"});
                table77.AddRow(new string[] {
                            "width2",
                            "310 мм"});
                table77.AddRow(new string[] {
                            "length3",
                            "2000 мм"});
                table77.AddRow(new string[] {
                            "width3",
                            "416 мм"});
#line 56
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table77, "And ");
#line hidden
                global::Reqnroll.Table table78 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table78.AddRow(new string[] {
                            "photo_main",
                            "https://dimdvirdevelop.netlify.app/img/category03/product04.png"});
                table78.AddRow(new string[] {
                            "photo_drawing",
                            "https://dimdvirdevelop.netlify.app/img/category03/product0402.png"});
#line 66
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table78, "And ");
#line hidden
#line 70
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 72
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 73
 await testRunner.WhenAsync("select Product6", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table79 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table79.AddRow(new string[] {
                            "item_name",
                            "ЗАГЛУШКА КОНЬОКА"});
                table79.AddRow(new string[] {
                            "large_plug",
                            "295 мм"});
                table79.AddRow(new string[] {
                            "small_plug",
                            "193 мм"});
#line 74
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table79, "And ");
#line hidden
                global::Reqnroll.Table table80 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table80.AddRow(new string[] {
                            "photo_main",
                            "https://dimdvirdevelop.netlify.app/img/category03/product06.png"});
                table80.AddRow(new string[] {
                            "photo_drawing",
                            "https://dimdvirdevelop.netlify.app/img/category03/product0602.png"});
#line 79
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table80, "And ");
#line hidden
#line 83
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 85
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 86
 await testRunner.WhenAsync("select Product7", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table81 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table81.AddRow(new string[] {
                            "item_name",
                            "СНІГОЗАТРИМУВАЧ"});
                table81.AddRow(new string[] {
                            "length1",
                            "1000 мм"});
                table81.AddRow(new string[] {
                            "width1",
                            "310 мм"});
                table81.AddRow(new string[] {
                            "length2",
                            "1250 мм"});
                table81.AddRow(new string[] {
                            "width2",
                            "310 мм"});
                table81.AddRow(new string[] {
                            "length3",
                            "2000 мм"});
                table81.AddRow(new string[] {
                            "width3",
                            "250 мм"});
                table81.AddRow(new string[] {
                            "length4",
                            "1000 мм"});
                table81.AddRow(new string[] {
                            "width4",
                            "250 мм"});
                table81.AddRow(new string[] {
                            "length5",
                            "1250 мм"});
                table81.AddRow(new string[] {
                            "width5",
                            "250 мм"});
#line 87
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table81, "And ");
#line hidden
                global::Reqnroll.Table table82 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table82.AddRow(new string[] {
                            "photo_main",
                            "https://dimdvirdevelop.netlify.app/img/category03/product07.png"});
                table82.AddRow(new string[] {
                            "photo_drawing",
                            "https://dimdvirdevelop.netlify.app/img/category03/product0702.png"});
#line 100
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table82, "And ");
#line hidden
#line 104
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 106
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 107
 await testRunner.WhenAsync("select Product8", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table83 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table83.AddRow(new string[] {
                            "item_name",
                            "СНІГОЗАТРИМУВАЧ ТРУБЧАСТИЙ ДЛЯ ФАЛЬЦУ"});
                table83.AddRow(new string[] {
                            "tube",
                            "2"});
                table83.AddRow(new string[] {
                            "pipe_bracket",
                            "2"});
                table83.AddRow(new string[] {
                            "tube_plug",
                            "4"});
#line 108
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table83, "And ");
#line hidden
                global::Reqnroll.Table table84 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table84.AddRow(new string[] {
                            "photo_main",
                            "https://dimdvirdevelop.netlify.app/img/category03/product08.png"});
                table84.AddRow(new string[] {
                            "photo_drawing",
                            "https://dimdvirdevelop.netlify.app/img/category03/product0802.png"});
#line 114
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table84, "And ");
#line hidden
#line 118
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 120
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 121
 await testRunner.WhenAsync("select Product9", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table85 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table85.AddRow(new string[] {
                            "item_name",
                            "СНІГОЗАТРИМУВАЧ ТРУБЧАСТИЙ ДЛЯ ФАЛЬЦ-НАСТИЛУ"});
                table85.AddRow(new string[] {
                            "tube",
                            "1"});
                table85.AddRow(new string[] {
                            "pipe_bracket",
                            "2"});
                table85.AddRow(new string[] {
                            "tube_plug",
                            "2"});
#line 122
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table85, "And ");
#line hidden
                global::Reqnroll.Table table86 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table86.AddRow(new string[] {
                            "photo_main",
                            "https://dimdvirdevelop.netlify.app/img/category03/product09.png"});
                table86.AddRow(new string[] {
                            "photo_drawing",
                            "https://dimdvirdevelop.netlify.app/img/category03/product0902.png"});
#line 128
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table86, "And ");
#line hidden
#line 132
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 135
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 136
 await testRunner.WhenAsync("select Product10", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table87 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table87.AddRow(new string[] {
                            "item_name",
                            "СНІГОРІЗ"});
                table87.AddRow(new string[] {
                            "length1",
                            "153 мм"});
                table87.AddRow(new string[] {
                            "width1",
                            "45 мм"});
#line 137
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table87, "And ");
#line hidden
                global::Reqnroll.Table table88 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table88.AddRow(new string[] {
                            "photo_main",
                            "https://dimdvirdevelop.netlify.app/img/category03/product10.png"});
                table88.AddRow(new string[] {
                            "photo_drawing",
                            "https://dimdvirdevelop.netlify.app/img/category03/product1002.png"});
#line 142
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table88, "And ");
#line hidden
#line 146
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 148
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 149
 await testRunner.WhenAsync("select Product11", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table89 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table89.AddRow(new string[] {
                            "item_name",
                            "СНІГОЗАТРИМУВАЧ ПІВМІСЯЦЬ"});
                table89.AddRow(new string[] {
                            "length1",
                            "230 мм"});
                table89.AddRow(new string[] {
                            "width1",
                            "282 мм"});
                table89.AddRow(new string[] {
                            "hight",
                            "60 мм"});
#line 150
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table89, "And ");
#line hidden
                global::Reqnroll.Table table90 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table90.AddRow(new string[] {
                            "photo_main",
                            "https://dimdvirdevelop.netlify.app/img/category03/product11.png"});
                table90.AddRow(new string[] {
                            "photo_drawing",
                            "https://dimdvirdevelop.netlify.app/img/category03/product1102.png"});
#line 156
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table90, "And ");
#line hidden
#line 160
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 162
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 163
 await testRunner.WhenAsync("select Product12", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table91 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table91.AddRow(new string[] {
                            "item_name",
                            "СТІННИЙ ЗАХИСТ З ЗАРІЗОМ"});
                table91.AddRow(new string[] {
                            "length1",
                            "2000 мм"});
                table91.AddRow(new string[] {
                            "width1",
                            "250 мм"});
                table91.AddRow(new string[] {
                            "length2",
                            "2000 мм"});
                table91.AddRow(new string[] {
                            "width2",
                            "312 мм"});
#line 164
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table91, "And ");
#line hidden
                global::Reqnroll.Table table92 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table92.AddRow(new string[] {
                            "photo_main",
                            "https://dimdvirdevelop.netlify.app/img/category03/product12.png"});
                table92.AddRow(new string[] {
                            "photo_drawing",
                            "https://dimdvirdevelop.netlify.app/img/category03/product1202.png"});
#line 171
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table92, "And ");
#line hidden
#line 175
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 177
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 178
 await testRunner.WhenAsync("select Product13", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table93 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table93.AddRow(new string[] {
                            "item_name",
                            "СТІННИЙ ЗАХИСТ"});
                table93.AddRow(new string[] {
                            "length1",
                            "2000 мм"});
                table93.AddRow(new string[] {
                            "width1",
                            "250 мм"});
                table93.AddRow(new string[] {
                            "length2",
                            "2000 мм"});
                table93.AddRow(new string[] {
                            "width2",
                            "312 мм"});
#line 179
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table93, "And ");
#line hidden
                global::Reqnroll.Table table94 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table94.AddRow(new string[] {
                            "photo_main",
                            "https://dimdvirdevelop.netlify.app/img/category03/product13.png"});
                table94.AddRow(new string[] {
                            "photo_drawing",
                            "https://dimdvirdevelop.netlify.app/img/category03/product1302.png"});
#line 186
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table94, "And ");
#line hidden
#line 190
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 192
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 193
 await testRunner.WhenAsync("select Product14", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table95 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table95.AddRow(new string[] {
                            "item_name",
                            "ЗАХИСТ КАРНИЗА"});
                table95.AddRow(new string[] {
                            "length1",
                            "2000 мм"});
                table95.AddRow(new string[] {
                            "width1",
                            "156 мм"});
                table95.AddRow(new string[] {
                            "length2",
                            "2000 мм"});
                table95.AddRow(new string[] {
                            "width2",
                            "178 мм"});
                table95.AddRow(new string[] {
                            "length3",
                            "2000 мм"});
                table95.AddRow(new string[] {
                            "width3",
                            "208 мм"});
#line 194
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table95, "And ");
#line hidden
                global::Reqnroll.Table table96 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table96.AddRow(new string[] {
                            "photo_main",
                            "https://dimdvirdevelop.netlify.app/img/category03/product14.png"});
#line 203
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table96, "And ");
#line hidden
#line 206
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 208
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 209
 await testRunner.WhenAsync("select Product16", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table97 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table97.AddRow(new string[] {
                            "item_name",
                            "ВІТРОЗАХИСТ ДЛЯ ПІДШИВКИ"});
                table97.AddRow(new string[] {
                            "length1",
                            "2000 мм"});
                table97.AddRow(new string[] {
                            "width1",
                            "310 мм"});
#line 210
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table97, "And ");
#line hidden
                global::Reqnroll.Table table98 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table98.AddRow(new string[] {
                            "photo_main",
                            "https://dimdvirdevelop.netlify.app/img/category03/product16.png"});
                table98.AddRow(new string[] {
                            "photo_drawing",
                            "https://dimdvirdevelop.netlify.app/img/category03/product1602.png"});
#line 215
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table98, "And ");
#line hidden
#line 219
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 221
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 222
 await testRunner.WhenAsync("select Product18", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table99 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table99.AddRow(new string[] {
                            "item_name",
                            "ЖОЛОБ ПЛОСКИЙ"});
                table99.AddRow(new string[] {
                            "length1",
                            "2000 мм"});
                table99.AddRow(new string[] {
                            "width1",
                            "416 мм"});
                table99.AddRow(new string[] {
                            "length2",
                            "2000 мм"});
                table99.AddRow(new string[] {
                            "width2",
                            "624 мм"});
                table99.AddRow(new string[] {
                            "length3",
                            "2000 мм"});
                table99.AddRow(new string[] {
                            "width3",
                            "1250 мм"});
#line 223
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table99, "And ");
#line hidden
                global::Reqnroll.Table table100 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table100.AddRow(new string[] {
                            "photo_main",
                            "https://dimdvirdevelop.netlify.app/img/category03/product18.png"});
                table100.AddRow(new string[] {
                            "photo_drawing",
                            "https://dimdvirdevelop.netlify.app/img/category03/product1802.png"});
#line 233
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table100, "And ");
#line hidden
#line 237
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 239
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 240
 await testRunner.WhenAsync("select Product19", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table101 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table101.AddRow(new string[] {
                            "item_name",
                            "НАКЛАДКА ЖОЛОБА"});
                table101.AddRow(new string[] {
                            "length1",
                            "2000 мм"});
                table101.AddRow(new string[] {
                            "width1",
                            "250 мм"});
                table101.AddRow(new string[] {
                            "length2",
                            "2000 мм"});
                table101.AddRow(new string[] {
                            "width2",
                            "310 мм"});
#line 241
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table101, "And ");
#line hidden
                global::Reqnroll.Table table102 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table102.AddRow(new string[] {
                            "photo_main",
                            "https://dimdvirdevelop.netlify.app/img/category03/product19.png"});
                table102.AddRow(new string[] {
                            "photo_drawing",
                            "https://dimdvirdevelop.netlify.app/img/category03/product1902.png"});
#line 248
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table102, "And ");
#line hidden
#line 252
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 254
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 255
 await testRunner.WhenAsync("select Product20", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table103 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table103.AddRow(new string[] {
                            "item_name",
                            "ПЛАНКА ЗАШИВКИ УНІВЕРСАЛЬНА"});
                table103.AddRow(new string[] {
                            "length1",
                            "2000 мм"});
                table103.AddRow(new string[] {
                            "width1",
                            "250 мм"});
                table103.AddRow(new string[] {
                            "length2",
                            "2000 мм"});
                table103.AddRow(new string[] {
                            "width2",
                            "208 мм"});
                table103.AddRow(new string[] {
                            "length3",
                            "2000 мм"});
                table103.AddRow(new string[] {
                            "width3",
                            "178 мм"});
#line 256
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table103, "And ");
#line hidden
                global::Reqnroll.Table table104 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table104.AddRow(new string[] {
                            "photo_main",
                            "https://dimdvirdevelop.netlify.app/img/category03/product20.png"});
                table104.AddRow(new string[] {
                            "photo_drawing",
                            "https://dimdvirdevelop.netlify.app/img/category03/product2002.png"});
#line 265
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table104, "And ");
#line hidden
#line 269
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 271
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 272
 await testRunner.WhenAsync("select Product21", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table105 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table105.AddRow(new string[] {
                            "item_name",
                            "ПЛАНКА ЗАШИВКИ З ВІДЛИВОМ"});
                table105.AddRow(new string[] {
                            "length1",
                            "2000 мм"});
                table105.AddRow(new string[] {
                            "width1",
                            "178 мм"});
                table105.AddRow(new string[] {
                            "length2",
                            "2000 мм"});
                table105.AddRow(new string[] {
                            "width2",
                            "208 мм"});
                table105.AddRow(new string[] {
                            "length3",
                            "2000 мм"});
                table105.AddRow(new string[] {
                            "width3",
                            "250 мм"});
#line 273
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table105, "And ");
#line hidden
                global::Reqnroll.Table table106 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table106.AddRow(new string[] {
                            "photo_main",
                            "https://dimdvirdevelop.netlify.app/img/category03/product21.png"});
                table106.AddRow(new string[] {
                            "photo_drawing",
                            "https://dimdvirdevelop.netlify.app/img/category03/product2102.png"});
#line 282
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table106, "And ");
#line hidden
#line 286
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 288
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 289
 await testRunner.WhenAsync("select Product24", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table107 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table107.AddRow(new string[] {
                            "item_name",
                            "КУТНИК ЗОВНІШНІЙ"});
                table107.AddRow(new string[] {
                            "length1",
                            "2000 мм"});
                table107.AddRow(new string[] {
                            "width1",
                            "208 мм"});
                table107.AddRow(new string[] {
                            "length2",
                            "2000 мм"});
                table107.AddRow(new string[] {
                            "width2",
                            "110 мм"});
                table107.AddRow(new string[] {
                            "length3",
                            "2000 мм"});
                table107.AddRow(new string[] {
                            "width3",
                            "80 мм"});
#line 290
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table107, "And ");
#line hidden
                global::Reqnroll.Table table108 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table108.AddRow(new string[] {
                            "photo_main",
                            "https://dimdvirdevelop.netlify.app/img/category03/product24.png"});
                table108.AddRow(new string[] {
                            "photo_drawing",
                            "https://dimdvirdevelop.netlify.app/img/category03/product2402.png"});
#line 299
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table108, "And ");
#line hidden
#line 303
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 305
 await testRunner.GivenAsync("go back", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 306
 await testRunner.WhenAsync("select Product25", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table109 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "textContent"});
                table109.AddRow(new string[] {
                            "item_name",
                            "КУТНИК ВНУТРІШНІЙ"});
                table109.AddRow(new string[] {
                            "length1",
                            "2000 мм"});
                table109.AddRow(new string[] {
                            "width1",
                            "208 мм"});
                table109.AddRow(new string[] {
                            "length2",
                            "2000 мм"});
                table109.AddRow(new string[] {
                            "width2",
                            "110 мм"});
                table109.AddRow(new string[] {
                            "length3",
                            "2000 мм"});
                table109.AddRow(new string[] {
                            "width3",
                            "80 мм"});
#line 307
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table109, "And ");
#line hidden
                global::Reqnroll.Table table110 = new global::Reqnroll.Table(new string[] {
                            "id",
                            "src"});
                table110.AddRow(new string[] {
                            "photo_main",
                            "https://dimdvirdevelop.netlify.app/img/category03/product25.png"});
                table110.AddRow(new string[] {
                            "photo_drawing",
                            "https://dimdvirdevelop.netlify.app/img/category03/product2502.png"});
#line 316
 await testRunner.AndAsync("check product\'s properties", ((string)(null)), table110, "And ");
#line hidden
#line 320
 await testRunner.ThenAsync("compare data for product", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 321
 await testRunner.AndAsync("close browser", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
    }
}
#pragma warning restore
#endregion
